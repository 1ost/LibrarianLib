dependencies {
    allmodules.each {
        implementation(project(path: it.path, configuration: "libRuntime"))
    }
}

allmodules.each {
    classes.dependsOn(it.classes)
    processResources.dependsOn(it.processResources)
    classes.dependsOn(it.testClasses)
    processResources.dependsOn(it.processTestResources)
}

/*
 * Without these forge spews dozens of errors about missing directories when searching for mods:
 * [18:17:04] [pool-2-thread-1/ERROR] [ne.mi.fm.lo.mo.ExplodedDirectoryLocator/SCAN]: Exception scanning <<project dir>>/modules/utilities/build/classes/java/test
 * java.nio.file.NoSuchFileException: <<project dir>>/modules/utilities/build/classes/java/test
 *     at sun.nio.fs.UnixException.translateToIOException(UnixException.java:86) ~[?:1.8.0_181] {}
 */

task createEmptyMainOutputDirs << {
    allmodules.each { module ->
        module.sourceSets.main.output.classesDirs.each {
            it.mkdirs()
        }
        module.sourceSets.main.output.resourcesDir.mkdirs()
    }
}
task createEmptyTestOutputDirs << {
    allmodules.each { module ->
        module.sourceSets.test.output.classesDirs.each {
            it.mkdirs()
        }
        module.sourceSets.test.output.resourcesDir.mkdirs()
    }
}
processResources.finalizedBy(createEmptyMainOutputDirs)
processTestResources.finalizedBy(createEmptyTestOutputDirs)

minecraft {
    Closure runDefaults = {
        workingDirectory rootProject.file('run')
        ideaModule 'librarianlib.runtime.main'
        taskName name

        property 'forge.logging.markers', 'REGISTRIES'
        property 'forge.logging.console.level', 'debug'

        mods {
            allmodules.each { mod ->
                create(mod.modid) {
                    source mod.sourceSets.main
                }
                create(mod.modid_test) {
                    source mod.sourceSets.test
                }
            }
        }
    }

    runs {
        client {
            configure(delegate, runDefaults)
        }

        server {
            configure(delegate, runDefaults)
        }
    }
}
