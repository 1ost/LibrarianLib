import org.apache.tools.ant.filters.ReplaceTokens

dependencies {
    shade("com.github.thecodewarrior:Mirror:ee34c8b") {
        exclude group: 'org.jetbrains.kotlin'
    }
    testApi project(':testbase')
}

processResources {
    filesMatching("**/mods.toml") {
        filter(ReplaceTokens, tokens: ['version': rootProject.mod_version])
    }
}

def moduleNames = allmodules.collect { it.name }

generateFiles {
    inputs.property("moduleNames", moduleNames)

    ext.modsTomlSource = file("$resourcesDir/META-INF/mods.toml")
    ext.dependenciesTomls = allmodules.collect {
        file("$projectDir/src/main/resources/META-INF/dependencies.toml")
    }
    inputs.files(modsTomlSource, dependenciesTomls)

    ext.moduleIndexOut = file("$genResources/META-INF/ll/core/modules.txt")
    outputs.file(moduleIndexOut)

    doLast {
        moduleIndexOut.parentFile.mkdirs()
        moduleIndexOut.text = moduleNames.join("\n")

        def tomlString = modsTomlSource.text

        dependenciesTomls.each {
            if(!tomlString.endsWith("\n")) tomlString += "\n"
            if(it.exists())
                tomlString += it.text
        }

        modsTomlOut.text = tomlString
    }
}
